buildscript {
	ext {
		springBootVersion = '2.1.3.RELEASE'
	}
	repositories {
		mavenCentral()
		jcenter()
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
	dependencies {
		classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
		classpath "com.moowork.gradle:gradle-node-plugin:1.2.0"
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.moowork.node'

group = 'com.mocavada'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
}

dependencies {
	// WEB
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// JPA & MYSQL
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'mysql:mysql-connector-java'

	// LOG
	implementation group: 'commons-io', name: 'commons-io', version: '2.6'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	// SESSION
//	implementation 'org.springframework.session:spring-session-core'

	// AOP
	implementation 'org.springframework.boot:spring-boot-starter-aop'

	// TEST
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// DEV TOOLS
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
}


//======== tasks for angular frontend
//node {
//	version = "10.15.1"
//	npmVersion = "6.8.0"
//	download = true
//	nodeModulesDir = file("frontend")
//}
//
//task buildFrontEnd(type: NpmTask, dependsOn: 'npmInstall') {
//	group = 'application'
//	description = "Build and watches the client side assets for rebuilding"
//	args = ['run', 'buildDevFast']
//
//	//skip update. remove it if needed
//	nodeSetup.onlyIf {
//		!nodeSetup.nodeDir.exists()
//	}
//	npmSetup.onlyIf {
//		!npmSetup.npmDir.exists()
//	}
//	npmInstall.onlyIf {
//		!npmSetup.npmDir.exists()
//	}
//}

//======== tasks for angular frontend
//node {
//	version = "10.15.1"
//	npmVersion = "6.8.0"
//	download = true
//	nodeModulesDir = file("frontend")
//}
//
//task buildFrontEnd(type: NpmTask, dependsOn: 'npmInstall') {
//	group = 'application'
//	description = "Build and watches the client side assets for rebuilding"
//	args = ['run', 'buildDevFast']
//
//	//skip update. remove it if needed
//	nodeSetup.onlyIf {
//		!nodeSetup.nodeDir.exists()
//	}
//	npmSetup.onlyIf {
//		!npmSetup.npmDir.exists()
//	}
//	npmInstall.onlyIf {
//		!npmSetup.npmDir.exists()
//	}
//}


//======== comment out this line, to run Spring boot without rebuild angular frontend

//bootRun.dependsOn(buildFrontEnd)

//======== speed boot for spring boot

//bootRun {
//	systemProperties['Xverify'] = 'none'
//	systemProperties['TieredStopAtLevel'] = '1'
//}

